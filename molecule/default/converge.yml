# cOPYRIGht 2019-2025 Chris Croome
#
# This file is part of the Webarchitects Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Run as root
  # become: true
  connection: local
  # gather_facts: true
  hosts:
    - localhost
  tasks:

    - name: Debug ansible_facts.distribution_release
      ansible.builtin.debug:
        var: ansible_facts.distribution_release

    - name: Debug ansible_facts.effective_user_id
      ansible.builtin.debug:
        var: ansible_facts.effective_user_id

    - name: Debug ansible_facts.python_version
      ansible.builtin.debug:
        var: ansible_facts.python_version

    - name: Check the pipx version
      ansible.builtin.command: pipx --version
      check_mode: false
      changed_when: false
      register: molecule_pipx_executable_check

    - name: Set a fact for the pipx version
      ansible.builtin.set_fact:
        molecule_pipx_version: "{{ molecule_pipx_executable_check.stdout | trim | string }}"

    - name: Pipx version
      ansible.builtin.debug:
        var: molecule_pipx_version

    # This shouldn't be needed but Trixie appended a + for a while
    # https://git.coop/webarch/ansible/-/jobs/61377#L1525
    - name: Set a fact for the Python version
      ansible.builtin.set_fact:
        molecule_python_version: "{{ ansible_facts.python_version | ansible.builtin.regex_replace('[+].*$') }}"

    # Debian Buster Package: python3 (3.7.3-1)
    # https://packages.debian.org/buster/python3
    - name: The Python version semver is required
      ansible.builtin.assert:
        that:
          - molecule_python_version is ansible.builtin.version('3.7.3', 'ge', version_type='semver')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    # Debian Trixie
    - name: Include ansible role with Trixie vars as root for Python >= 3.10.0 and pipx >= 1.7.0
      ansible.builtin.include_role:
        name: ansible
      vars:  # noqa var-naming[no-role-prefix]
        ans: true
        ans_download:
          delay: 10
          retries: 20
        ans_cols:
          - name: ansible.posix
            url: https://github.com/ansible-collections/ansible.posix
            version: 2.1.0  # ansible.posix
          - name: ansible.utils
            url: https://github.com/ansible-collections/ansible.utils
            version: 6.0.0  # ansible.utils
          - name: community.docker
            url: https://github.com/ansible-collections/community.docker
            version: 4.6.1  # community.docker
          - name: community.crypto
            url: https://github.com/ansible-collections/community.crypto
            version: 3.0.1  # community.crypto
          - name: community.dns
            url: https://github.com/ansible-collections/community.dns
            version: 3.2.6  # community.dns
          - name: community.general
            url: https://github.com/ansible-collections/community.general
            # community.general 11.x requires pipx >= 1.7.0 and bookworm has 1.1.0
            # https://packages.debian.org/bookworm/pipx
            # and noble has 1.4.3
            # https://packages.ubuntu.com/noble/pipx
            version: 11.1.0  # community.general
          - name: community.mysql
            url: https://github.com/ansible-collections/community.mysql
            version: 3.15.0  # community.mysql
          - name: community.postgresql
            url: https://github.com/ansible-collections/community.postgresql
            version: 4.1.0  # community.postgresql
          - name: community.rabbitmq
            url: https://github.com/ansible-collections/community.rabbitmq
            version: 1.6.0  # community.rabbitmq
        ans_pypi_pkgs:
          - name: ansible
            url: https://pypi.org/pypi/ansible
            version: latest
          - name: ansible-core
            url: https://pypi.org/pypi/ansible-core
            venv: ansible
            version: latest
          - name: ansible-lint
            url: https://pypi.org/pypi/ansible-lint
            venv: ansible
            version: latest
          - name: dnspython
            type: lib
            url: https://pypi.org/pypi/dnspython
            venv: ansible
            version: latest
          - name: jc
            url: https://pypi.org/pypi/jc
            venv: ansible
            version: latest
          - name: jinjanator
            url: https://pypi.org/pypi/jinjanator
            venv: ansible
            version: latest
          - name: jinjanator-plugin-ansible
            url: https://pypi.org/pypi/jinjanator-plugin-ansible
            venv: ansible
            version: latest
          - name: jinja2-ansible-filters
            type: lib
            url: https://pypi.org/pypi/jinja2-ansible-filters
            venv: ansible
            version: latest
          - name: j2lint
            url: https://pypi.org/pypi/j2lint
            venv: ansible
            version: latest
          - name: jmespath
            url: https://pypi.org/pypi/jmespath
            venv: ansible
            version: latest
          - name: molecule
            url: https://pypi.org/pypi/molecule
            venv: ansible
            version: latest
          - name: lxml
            type: lib
            url: https://pypi.org/pypi/lxml
            venv: ansible
            version: latest
          - name: molecule-plugins
            extras:
              - docker
            url: https://pypi.org/pypi/molecule-plugins
            venv: ansible
            version: latest
          - name: netaddr
            type: lib
            url: https://pypi.org/pypi/netaddr
            venv: ansible
            version: latest
          - name: psycopg
            type: lib
            url: https://pypi.org/pypi/psycopg
            venv: ansible
            version: latest
          - name: pymarkdownlnt
            url: https://pypi.org/pypi/pymarkdownlnt
            venv: ansible
            version: latest
          - name: pymysql
            type: lib
            url: https://pypi.org/pypi/pymysql
            venv: ansible
            version: latest
          - name: python-debian
            type: lib
            url: https://pypi.org/pypi/python-debian
            venv: ansible
            version: latest
          - name: yamllint
            url: https://pypi.org/pypi/yamllint
            venv: ansible
            version: latest
      when: >-
        (ansible_facts.distribution_release == "trixie") or
        ((molecule_python_version is ansible.builtin.version('3.10.0', 'ge', version_type='semver')) and
        (molecule_pipx_version is ansible.builtin.version('1.7.0', 'ge', version_type='semver')))

    # Debian Bookworm, Ubuntu Jammy and Ubuntu Noble
    - name: Include ansible role with Bookworm, Jammy and Ubuntu vars as root for Python >= 3.10.0 and pipx < 1.7.0
      ansible.builtin.include_role:
        name: ansible
      vars:  # noqa var-naming[no-role-prefix]
        ans: true
        ans_download:
          delay: 10
          retries: 20
      when: >-
        (ansible_facts.distribution_release == "bookworm") or
        (ansible_facts.distribution_release == "jammy") or
        (ansible_facts.distribution_release == "noble") or
        ((molecule_python_version is ansible.builtin.version('3.10.0', 'ge', version_type='semver')) and
        (molecule_pipx_version is ansible.builtin.version('1.7.0', 'lt', version_type='semver')))
...
