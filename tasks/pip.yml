# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check, install, reinstall and remove PyPI package using pip
  block:

    - name: "Debug PyPI package proposed state for {{ ans_pypi_pkg.name }}"
      ansible.builtin.debug:
        msg: "{{ ans_pypi_pkg.state | default('present') }}"
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: The URL and version of the PyPI package are required when the state is not set to absent
      ansible.builtin.assert:
        that:
          - ans_pypi_pkg.url is defined
          - ans_pypi_pkg.version is defined
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    - name: Include PyPi info tasks when URL and version of the PyPI package are defined
      ansible.builtin.include_tasks: pypi_info.yml
      when:
        - ans_pypi_pkg.url is defined
        - ans_pypi_pkg.version is defined

    - name: PyPI package present using pip
      block:

        - name: Only downgrade packages when ans_downgrade is true
          block:

            - name: "PyPi system package present {{ ans_pypi_pkg.name }}{% if ans_pypi_pkg.extras is defined %}[{% for extra in ans_pypi_pkg.extras %}{{ extra }}{% if not loop.last %},{% endif %}{% endfor %}]{% endif %}=={{ ans_pypi_version_required }}"  # noqa args[module] name[template]
              ansible.builtin.pip:
                name: "{{ ans_pypi_pkg.name }}{% if ans_pypi_pkg.extras is defined %}[{% for extra in ans_pypi_pkg.extras %}{{ extra }}{% if not loop.last %},{% endif %}{% endfor %}]{% endif %}=={{ ans_pypi_version_required }}"
                state: "{{ ans_pypi_pkg.state | default('present') }}"
                executable: "{{ ans_pip_path }}"
              when: >-
                ( ansible_effective_user_id == 0 ) and
                ( ( ans_pypi_pkg.state is not defined ) or
                ( ( ans_pypi_pkg.state is defined ) and
                ( ans_pypi_pkg.state == "present" ) or
                ( ans_pypi_pkg.state == "forcereinstall" ) ) )

            - name: "PyPi user package present {{ ans_pypi_pkg.name }}{% if ans_pypi_pkg.extras is defined %}[{% for extra in ans_pypi_pkg.extras %}{{ extra }}{% if not loop.last %},{% endif %}{% endfor %}]{% endif %}=={{ ans_pypi_version_required }}"  # noqa args[module] name[template]
              ansible.builtin.pip:
                name: "{{ ans_pypi_pkg.name }}{% if ans_pypi_pkg.extras is defined %}[{% for extra in ans_pypi_pkg.extras %}{{ extra }}{% if not loop.last %},{% endif %}{% endfor %}]{% endif %}=={{ ans_pypi_version_required }}"
                state: "{{ ans_pypi_pkg.state | default('present') }}"
                executable: "{{ ans_pip_path }}"
                extra_args: "--user{% if ansible_facts.python_version is version('3.11.2', '>=') %} --break-system-packages{% endif %}"
              when: >-
                ( ansible_effective_user_id != 0 ) and
                ( ( ans_pypi_pkg.state is not defined ) or
                ( ( ans_pypi_pkg.state is defined ) and
                ( ans_pypi_pkg.state == "present" ) or
                ( ans_pypi_pkg.state == "forcereinstall" ) ) )

          when: >-
            ( ( not ans_downgrade | bool ) and
            ( ( ( ans_pypi_system_version_present is defined ) and
            ( ans_pypi_system_version_present | length > 0 ) and
            ( ans_pypi_version_required is version(ans_pypi_system_version_present, 'gt') ) ) or
            ( ( ans_pypi_user_version_present is defined ) and
            ( ans_pypi_user_version_present | length > 0 ) and
            ( ans_pypi_version_required is version(ans_pypi_user_version_present, 'gt') ) ) or
            ( ( ans_pypi_system_version_present is defined ) and
            ( ans_pypi_system_version_present | length == 0 ) and
            ( ans_pypi_user_version_present is defined ) and
            ( ans_pypi_user_version_present | length == 0 ) ) ) ) or
            ( ( ans_downgrade | bool ) and
            ( ( ( ans_pypi_system_version_present is defined ) and
            ( ans_pypi_system_version_present | length > 0 ) and
            ( ans_pypi_version_required is version(ans_pypi_system_version_present, 'lt') ) ) or
            ( ( ans_pypi_user_version_present is defined ) and
            ( ans_pypi_user_version_present | length > 0 ) and
            ( ans_pypi_version_required is version(ans_pypi_user_version_present, 'lt') ) ) or
            ( ( ans_pypi_system_version_present is defined ) and
            ( ans_pypi_system_version_present | length == 0 ) and
            ( ans_pypi_user_version_present is defined ) and
            ( ans_pypi_user_version_present | length == 0 ) ) ) )


      when:
        - ans_pypi_pkg.url is defined
        - ans_pypi_pkg.version is defined
        - ( ans_pypi_pkg.state is not defined ) or ( ans_pypi_pkg.state != "absent" )

    - name: PyPI package absent using pip
      block:

        - name: Remove PyPI package using pip as root
          block:

            - name: "PyPi root user package absent {{ ans_pypi_pkg.name }}"
              ansible.builtin.pip:
                name: "{{ ans_pypi_pkg.name }}"
                state: absent
                executable: "{{ ans_pip_path }}"
              when:
                - ansible_effective_user_id == 0
                - ans_pypi_system_version_present is defined
                - ans_pypi_system_version_present | length > 0

          rescue:

            - name: This role doesn't use --break-system-packages as root, please remove this package manually
              ansible.builtin.fail:
                msg: "Please run: sudo pip remove --break-system-packages {{ ans_pypi_pkg.name }}"
              when: ansible_facts.python_version is version('3.11.2', '>=')

            - name: Removing package using pip as root failed
              ansible.builtin.fail:
                msg: "Please try removing this package manually: sudo pip remove {{ ans_pypi_pkg.name }}"

        - name: "PyPi user package absent {{ ans_pypi_pkg.name }}"
          ansible.builtin.pip:
            name: "{{ ans_pypi_pkg.name }}"
            state: absent
            executable: "{{ ans_pip_path }}"
            extra_args: "{% if ansible_facts.python_version is version('3.11.2', '>=') %}--break-system-packages{% endif %}"
          when:
            - ansible_effective_user_id != 0
            - ans_pypi_user_version_present is defined
            - ans_pypi_user_version_present | length > 0

      when: >-
        ( ( ans_pypi_pkg.state is defined ) and ( ans_pypi_pkg.state == "absent" ) ) or
        ( ( not ans_downgrade | bool ) and
        ( ans_pypi_version_required is defined ) and
        ( ans_pypi_system_version_present is defined ) and
        ( ans_pypi_system_version_present | length > 0 ) and
        ( ans_pypi_system_version_present is version(ans_pypi_version_required, '>=') ) )

  tags:
    - ans
...
