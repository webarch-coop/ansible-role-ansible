# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check pipx using the Ansible command module as the community.general.pipx_info module is not available
  block:

    - name: Run pipx list --include-injected --json
      ansible.builtin.command: pipx list --include-injected --json
      environment: "{% if ansible_effective_user_id == 0 %}{{ ans_pipx_root_env | default('') }}{% else %}{{ ans_pipx_user_env | default('') }}{% endif %}"
      check_mode: false
      changed_when: false
      register: ans_pipx_list_json

    - name: Set a fact for the pipx list results
      ansible.builtin.set_fact:
        ans_pipx_list: "{{ ans_pipx_list_json.stdout | from_json }}"

    - name: Debug ans_pipx_list
      ansible.builtin.debug:
        var: ans_pipx_list
        verbosity: "{% if ansible_check_mode | bool %}2{% else %}3{% endif %}"

    - name: Set a fact for the pipx installed packages
      ansible.builtin.set_fact:
        ans_pipx_pkgs: "{{ ans_pipx_list | community.general.json_query(ans_pipx_list_pkgs_jmespath_query) }}"

    - name: Debug ans_pipx_pkgs
      ansible.builtin.debug:
        var: ans_pipx_pkgs
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Debug ans_pipx_pkgs | community.general.json_query(ans_pypi_ansible_version_jmespath_query)
      ansible.builtin.debug:
        msg: "{{ ans_pipx_pkg | community.general.json_query(ans_pypi_ansible_version_jmespath_query) }}"
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Set a fact for the Ansible version and injected packages when the Ansible pipx venv exists
      block:

        - name: Set a fact for the pipx Ansible version
          ansible.builtin.set_fact:
            ans_pipx_ansible_version: "{{ ans_pipx_pkg | community.general.json_query(ans_pypi_ansible_version_jmespath_query) }}"

        - name: Debug pipx Ansible version
          ansible.builtin.debug:
            var: ans_pipx_ansible_version
            verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

        - name: Set a fact for the pipx Ansible venv existing injected packages
          ansible.builtin.set_fact:
            ans_pipx_injected: "{{ ans_pipx_list | community.general.json_query(ans_pipx_list_injected_pkgs_jmespath_query) }}"

        - name: Debug pipx Ansible venv existing injected packages
          ansible.builtin.debug:
            var: ans_pipx_injected
            verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

      when:
        - ans_pipx_pkgs | community.general.json_query(ans_pypi_ansible_version_jmespath_query) is defined
        - ans_pipx_pkgs | community.general.json_query(ans_pypi_ansible_version_jmespath_query) | type_debug == "str"

  tags:
    - ansible
...
