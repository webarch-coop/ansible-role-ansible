# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: PyPI packages configured using pipx
  block:

    - name: Check for packages installed via pip
      block:

        - name: Debug pip packages
          ansible.builtin.debug:
            msg:
              - "ans_pypi_pkg.name: {{ ans_pypi_pkg.name }}"
              - "ans_pypi_pkg.state: {% if ans_pypi_pkg.state is defined %}{{ ans_pypi_pkg.state }}{% endif %}"
              - "ans_pypi_pkg.version: {% if ans_pypi_pkg.version is defined %}{{ ans_pypi_pkg.version }}{% endif %}"
              - "ans_pypi_system_version_present: {{ ans_pip_system_existing | community.general.json_query(ans_pypi_pkg_version_jmespath_query) }}"
              - "ans_pypi_user_version_present: {{ ans_pip_user_existing | community.general.json_query(ans_pypi_pkg_version_jmespath_query) }}"
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
          loop: "{{ ans_pypi_pkgs }}"
          loop_control:
            loop_var: ans_pypi_pkg
            label: "{{ ans_pypi_pkg.name }}"

        - name: Set a fact for the pip user packages that should be removed
          ansible.builtin.set_fact:
            ans_pypi_pkg_uninstall: "{{ ans_pip_user_existing | community.general.json_query('[].name') }}"

        - name: User pip packages need to be removed with the following command
          ansible.builtin.fail:
            msg: "python3 -m pip uninstall{% for ans_pypi_pkg in ans_pypi_pkg_uninstall %} {{ ans_pypi_pkg }}{% endfor %}{% if ansible_python_version is version('3.11.2', 'ge') %} --break-system-packages{% endif %}"
          when: ansible_python_version is version('3.11.2', 'lt')

      when:
        - ans_pip_user_existing is defined
        - ans_pip_user_existing != []

    - name: Debug the required Ansible state
      ansible.builtin.debug:
        var: ans_required_state
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Debug ans_pipx_mod
      ansible.builtin.debug:
        var: ans_pipx_mod
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Include the pipx install tasks that use the command module
      ansible.builtin.include_tasks: pipx_cmd_install.yml
      when: not ans_pipx_mod | bool

    - name: Include the pipx install tasks that use the community.general.pipx module
      ansible.builtin.include_tasks: pipx_mod_install.yml
      when: ans_pipx_mod | bool

    # TODO This doesn't yet work properly for packages like ansible-lint or molecule when venv is set to something other than ansible
    - name: PyPI packages configured using pipx when not already available as system packages and not injected into the Ansible venv
      ansible.builtin.include_tasks: pipx_pkg.yml
      vars:
        ans_pypi_pkg_existing_version: "{{ ans_pip_system_existing | community.general.json_query(ans_pypi_pkg_version_jmespath_query) }}"
      when:
        - ans_pipx_mod | bool
        - ans_pypi_pkg.name != "ansible"
        - ( ans_pypi_pkg.venv is not defined ) or ( ( ans_pypi_pkg.venv is defined ) and ( ans_pypi_pkg.venv != "ansible" ) )
        - ( ans_pypi_pkg_existing_version is not defined ) or ( ans_pypi_pkg_existing_version | length == 0 ) or  ( ( ans_pypi_pkg_existing_version is defined ) and ( ans_pypi_pkg_existing_version is version(ans_pypi_pkg.version, 'ne') ) )
      loop: "{{ ans_pypi_pkgs }}"
      loop_control:
        loop_var: ans_pypi_pkg
        label: "{{ ans_pypi_pkg.name }}"

  tags:
    - ansible
...
