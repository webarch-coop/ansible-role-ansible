---
- name: Ansible tasks
  block:

    - name: Requirements present when root
      ansible.builtin.apt:
        pkg: "{{ ans_requirements }}"
      when: ansible_effective_user_id == 0

    - name: Check requirements when not root
      block:

        - name: Read package facts
          ansible.builtin.package_facts:
            manager: apt

        - name: Required packages need installing
          ansible.builtin.assert:
            that:
              - ans_pkg in ansible_facts.packages.keys()
            fail_msg:
              - "The {{ ans_pkg }} is required"
              - "You can install all the requirements using:"
              - "sudo apt install{% for ans_pkg_missing in ans_requirements %} {{ ans_pkg_missing }}{% endfor %}"
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
          loop: "{{ ans_requirements }}"
          loop_control:
            loop_var: ans_pkg

      when: ansible_effective_user_id != 0

    - name: JC present
      ansible.builtin.pip:
        name: jc
        executable: /usr/bin/pip3

    - name: Check variables
      ansible.builtin.include_tasks: checks.yml

    - name: Upgrade Ansible when the proposed version is greater than the installed version
      ansible.builtin.include_tasks: ansible.yml
      when:
        - ans_install | bool
        - ans_version is version(ans_installed_version, '>')

    # https://github.com/ansible/ansible/issues/77624
    # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1007907
    # https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1010345
    - name: Install resolvelib 0.5.3 for Ansible older than 2.13.3
      ansible.builtin.pip:
        name: resolvelib==0.5.3
        state: present
        executable: /usr/bin/pip3
      when: ans_installed_version is version('2.13.3', '<')

    - name: Remove resolvelib for Ansible newer than 2.13.3
      ansible.builtin.pip:
        name: resolvelib
        state: absent
        executable: /usr/bin/pip3
      when: ans_installed_version is version('2.13.3', '>=')

    - name: Install Ansible Lint
      ansible.builtin.include_tasks: lint.yml

    - name: Install Ansible Molecule
      ansible.builtin.include_tasks: molecule.yml

    - name: Install Ansible collections
      ansible.builtin.include_tasks: collection.yml
      loop: "{{ ans_collections }}"
      loop_control:
        loop_var: col
        label: "{{ col.name }}"

    - name: Check variables
      ansible.builtin.include_tasks: checks.yml

  when: ans
  tags:
    - ansible
...
