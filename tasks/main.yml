---
- name: Use the distro version of Ansible to install another version using pip
  block:

    - name: Check the distro version of Ansible
      command: "{{ ansible_distro_path }} --version"
      check_mode: false
      changed_when: false
      register: ansible_distro_version_installed

    - name: Set a fact for the ansible_distro_version
      set_fact:
        ansible_distro_version: "{{ ansible_distro_version_installed.stdout_lines[0] | regex_replace('^ansible ') | trim }}"

    - name: "Ansible {{ ansible_distro_path }} version"
      debug:
        var: ansible_distro_version

    - name: Get a list of available pypi Ansible versions
      uri:
        url: https://pypi.org/pypi/ansible/json
        method: GET
        return_content: true
      check_mode: false
      changed_when: false
      register: ansible_pypi

    - name: Create an array of the Ansible versions available
      set_fact:
        ansible_versions_available: "{{ ansible_versions_available | default([]) }} + [ '{{ version.key }}' ]"
      loop: "{{ ansible_pypi.json.releases | dict2items }}"
      loop_control:
        loop_var: version
        label: "{{ version.key }}"

    - name: Debug available versions
      debug:
        var: ansible_versions_available
        verbosity: 2

    - name: Loop through the Ansible versions available to check that that the proposed Ansible version is available via pypi
      debug:
        msg: "Ansible version {{ ansible_version }} is available via pypi"
      when: version is version(ansible_version, '==')
      loop: "{{ ansible_versions_available }}"
      loop_control:
        loop_var: version
        label: "{{ version }}"

    - name: Ensure that the proposed Ansible version is available via pypi
      assert:
        that:
          - ansible_version in ansible_versions_available

  tags:
    - ansible
...
