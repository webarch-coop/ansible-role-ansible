---
- name: Check variables
  block:

    - name: Check which the default version of Ansible is
      ansible.builtin.command: which ansible
      check_mode: false
      changed_when: false
      register: ans_which_ansible
      failed_when: ans_which_ansible.rc is not regex('^0|1$')

    - name: Ansible needs to be installed
      ansible.builtin.assert:
        that:
          - ans_which_ansible.rc == 0
        fail_msg: "Please install Ansible!"
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Set a variable for the path for the default version of Ansible
      ansible.builtin.set_fact:
        ans_default: "{{ ans_which_ansible.stdout | string }}"

    - name: Check the default version of Ansible
      ansible.builtin.command: "{{ ans_default }} --version"
      check_mode: false
      changed_when: false
      register: ans_installed_version_check

    - name: Set a fact for the installed version of Ansible
      ansible.builtin.set_fact:
        ans_installed_version: "{{ ans_installed_version_check.stdout_lines[0] | regex_replace('ansible ') | regex_replace('^\\[core ') | regex_replace('\\]$') | trim | string }}"

    - name: Ansible installed version
      ansible.builtin.debug:
        var: ans_installed_version
        verbosity: 1

    - name: Check that the installed version of Ansible is greater than or equal to 2.9.0
      ansible.builtin.assert:
        that:
          - ( ans_installed_version | string ) is version('2.9.0', '>=')
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Get a list of available pypi Ansible core versions
      ansible.builtin.uri:
        url: https://pypi.org/pypi/ansible-core/json
        method: GET
        return_content: true
      check_mode: false
      changed_when: false
      register: ans_pypi

    - name: Create an array of the Ansible core versions available
      ansible.builtin.set_fact:
        ans_versions_available: "{{ ans_versions_available | default([]) }} + [ '{{ ver.key | string }}' ]"
      loop: "{{ ans_pypi.json.releases | dict2items }}"
      loop_control:
        loop_var: ver
        label: "{{ ver.key }}"

    - name: Check that that the proposed Ansible core version is available via pypi
      ansible.builtin.assert:
        that:
          - ans_version in ans_versions_available
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

    - name: Check if Ansible has been installed using pip
      ansible.builtin.command: /usr/bin/pip3 --no-color -q show ansible-core
      check_mode: false
      changed_when: false
      register: ans_show_ansible
      failed_when: ans_show_ansible.rc is not regex('^0|1$')

    - name: Set a variable to indicate that Ansible has been installed using pip
      ansible.builtin.set_fact:
        ans_ansible_pip: "{% if ans_show_ansible.rc == 0 %}present{% else %}absent{% endif %}"

    - name: Debug Ansible version
      ansible.builtin.debug:
        msg: "The default version of Ansible is installed at {{ ans_which_ansible.stdout }} and is version {{ ans_installed_version }}"
        verbosity: 1

    - name: Check the Ansible Galaxy version
      ansible.builtin.command: ansible-galaxy --version
      check_mode: false
      changed_when: false
      register: ans_galaxy_check_version

    - name: Set a fact for the version of Ansible Galaxy installed
      ansible.builtin.set_fact:
        ans_galaxy_installed_version: "{{ ans_galaxy_check_version.stdout_lines[0] | regex_replace('^ansible-galaxy \\[core ') | regex_replace('\\]$') }}"

    - name: Get the Ansible Galaxy configured module search paths
      ansible.builtin.set_fact:
        ans_galaxy_module_search_paths: "{{ line | regex_replace('^  configured module search path = \\[') | regex_replace('\\]$') | regex_replace(\"'\") | split(', ') | list }}"
      when: line is regex('^  configured module search path')
      loop: "{{ ans_galaxy_check_version.stdout_lines }}"
      loop_control:
        loop_var: line

    - name: Debug Ansible Galaxy configured module search paths
      ansible.builtin.debug:
        var: ans_galaxy_module_search_paths
        verbosity: 2

  tags:
    - ansible
...
