---
- name: Check variables
  block:

    - name: Check which the default version of Ansible is
      command: which ansible
      check_mode: false
      changed_when: false
      register: ans_which_ansible
      failed_when: ans_which_ansible.rc is not regex('^0|1$')

    - name: Ansible needs to be installed
      assert:
        that:
          - ans_which_ansible.rc == 0
        fail_msg: "Please install Ansible!"

    - name: Set a variable for the path for the default version of Ansible
      set_fact:
        ans_default: "{{ ans_which_ansible.stdout | string }}"

    - name: Check the installed version of Ansible
      command: "{{ ans_installed }} --version"
      check_mode: false
      changed_when: false
      register: ans_installed_version_installed

    - name: Set a fact for the installed version of Ansible
      set_fact:
        ans_installed_version: "{{ ans_installed_version_installed.stdout_lines[0] | regex_replace('ansible ') | regex_replace('^\\[core ') | regex_replace('\\]$') | trim | string }}"

    - name: Ansible installed version
      debug:
        var: ans_installed_version

    - name: "Check that the installed version of Ansible {{ ans_installed_version }} is greater than or equal to 2.9.0"
      assert:
        that:
          - ( ans_installed_version | string ) is version('2.9.0', '>=')

    - name: Get a list of available pypi Ansible core versions
      uri:
        url: https://pypi.org/pypi/ansible-core/json
        method: GET
        return_content: true
      check_mode: false
      changed_when: false
      register: ans_pypi

    - name: Create an array of the Ansible core versions available
      set_fact:
        ans_versions_available: "{{ ans_versions_available | default([]) }} + [ '{{ ver.key | string }}' ]"
      loop: "{{ ans_pypi.json.releases | dict2items }}"
      loop_control:
        loop_var: ver
        label: "{{ ver.key }}"

    - name: "Check that that the proposed Ansible core version {{ ans_version }} is available via pypi"
      assert:
        that:
          - ans_version in ans_versions_available

    - name: Check if Ansible has been installed using pip
      command: /usr/bin/pip3 --no-color -q show ansible-core
      check_mode: false
      changed_when: false
      register: ans_show_ansible
      failed_when: ans_show_ansible.rc is not regex('^0|1$')

    - name: Set a variable to indicate that Ansible has been installed using pip
      set_fact:
        ans_ansible_pip: "{% if ans_show_ansible.rc == 0 %}present{% else %}absent{% endif %}"

    - name: Debug Ansible versions
      debug:
        msg:
          - "The installed Ansible {{ ans_which_ansible.stdout }} is version {{ ans_installed_version }}"

  tags:
    - ansible
...
