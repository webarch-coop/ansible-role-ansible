# Copyright 2019-2024 Chris Croome
#
# This file is part of the Webarchitects Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check Bash variables
  block:

    - name: Check python3-argcomplete
      block:

        - name: Check the files in the python3-argcomplete package
          ansible.builtin.command: dpkg -L python3-argcomplete
          check_mode: false
          changed_when: false
          register: ans_dpkg_argcomplete

        - name: Set a fact for the path to activate-global-python-argcomplete
          ansible.builtin.set_fact:
            ans_argcomplete_path: "{% if '/usr/bin/activate-global-python-argcomplete3' in ans_dpkg_argcomplete.stdout_lines %}/usr/bin/activate-global-python-argcomplete3{% elif '/usr/bin/activate-global-python-argcomplete' in ans_dpkg_argcomplete.stdout_lines %}/usr/bin/activate-global-python-argcomplete{% endif %}"
            ans_argcomplete_register_path: "{% if '/usr/bin/register-python-argcomplete3' in ans_dpkg_argcomplete.stdout_lines %}/usr/bin/register-python-argcomplete3{% elif '/usr/bin/register-python-argcomplete' in ans_dpkg_argcomplete.stdout_lines %}/usr/bin/register-python-argcomplete{% endif %}"

        - name: Debug the path to activate-global-python-argcomplete
          ansible.builtin.debug:
            var: ans_argcomplete_path
            verbosity: "{% if ansible_check_mode | bool %}2{% else %}3{% endif %}"

        - name: Check that the path to activate-global-python-argcomplete
          ansible.builtin.stat:
            path: "{{ ans_argcomplete_path }}"
          register: ans_argcomplete_path_check
          failed_when: not ans_argcomplete_path_check.stat.exists | bool
          when:
            - ans_argcomplete_path is defined
            - ans_argcomplete_path | length > 0

        - name: Debug the path to register-python-argcomplete
          ansible.builtin.debug:
            var: ans_argcomplete_register_path
            verbosity: "{% if ansible_check_mode | bool %}2{% else %}3{% endif %}"

        - name: Check that the path to register-python-argcomplete exists
          ansible.builtin.stat:
            path: "{{ ans_argcomplete_register_path }}"
          register: ans_argcomplete_register_path_check
          failed_when: not ans_argcomplete_register_path_check.stat.exists | bool
          when:
            - ans_argcomplete_register_path is defined
            - ans_argcomplete_register_path | length > 0

        - name: Check if Bash completion is present for the user when not root
          block:

            - name: Check ~/.bash_completion.d/python-argcomplete
              ansible.builtin.stat:
                path: ~/.bash_completion.d/python-argcomplete
              register: ans_argcomplete_path_no_ext

            - name: Set a fact for python-argcomplete user path without an extension
              ansible.builtin.set_fact:
                ans_argcomplete_user_path: ~/.bash_completion.d/python-argcomplete
              when: ans_argcomplete_path_no_ext.stat.exists | bool

            - name: Check ~/.bash_completion.d/python-argcomplete.sh
              ansible.builtin.stat:
                path: ~/.bash_completion.d/python-argcomplete.sh
              register: ans_argcomplete_path_no_ext

            - name: Set a fact for python-argcomplete user path with an extension
              ansible.builtin.set_fact:
                ans_argcomplete_user_path: ~/.bash_completion.d/python-argcomplete.sh
              when: ans_argcomplete_path_no_ext.stat.exists | bool

            - name: Debug the path to the users python-argcomplete script
              ansible.builtin.debug:
                var: ans_argcomplete_user_path
                verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
              when:
                - ans_argcomplete_user_path is defined
                - ans_argcomplete_user_path | length > 0

          when:
            - ansible_facts.env.SHELL is defined
            - ansible_facts.env.SHELL is regex('bash$')
            - ansible_facts.effective_user_id != 0

        - name: Check if Bash completion is present for the root user
          block:

            - name: Check /etc/bash_completion.d/python-argcomplete
              ansible.builtin.stat:
                path: ~/.bash_completion.d/python-argcomplete
              register: ans_argcomplete_path_no_ext

            - name: Set a fact for python-argcomplete user path without an extension
              ansible.builtin.set_fact:
                ans_argcomplete_root_path: /etc/bash_completion.d/python-argcomplete
              when: ans_argcomplete_path_no_ext.stat.exists | bool

            - name: Check /etc/bash_completion.d/python-argcomplete.sh
              ansible.builtin.stat:
                path: /etc/bash_completion.d/python-argcomplete.sh
              register: ans_argcomplete_path_no_ext

            - name: Set a fact for python-argcomplete user path with an extension
              ansible.builtin.set_fact:
                ans_argcomplete_root_path: /etc/bash_completion.d/python-argcomplete.sh
              when: ans_argcomplete_path_no_ext.stat.exists | bool

            - name: Debug the path to the users python-argcomplete script
              ansible.builtin.debug:
                var: ans_argcomplete_root_path
                verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
              when:
                - ans_argcomplete_root_path is defined
                - ans_argcomplete_root_path | length > 0

          when:
            - ansible_facts.env.SHELL is defined
            - ansible_facts.env.SHELL is regex('bash$')
            - ansible_facts.effective_user_id == 0

      when: >-
        ( ( ansible_facts.distribution == "Debian" ) and ( "python3-argcomplete" in ans_pkgs_debian ) ) or
        ( ( ansible_facts.distribution == "Ubuntu" ) and ( "python3-argcomplete" in ans_pkgs_ubuntu ) )

    - name: Check ~/.bash_profile
      ansible.builtin.stat:
        path: ~/.bash_profile
      register: ans_bash_profile

    - name: Set a fact for paths in the PATH environmental variable and the ~/.local/bin path
      ansible.builtin.set_fact:
        ans_paths: "{{ (ansible_facts.env.PATH).split(':') }}"
        ans_local_path: "{{ ansible_facts.env.HOME }}/.local/bin"
      when: ansible_facts.env.PATH is defined

    - name: Debug the paths in the PATH environmental variable
      ansible.builtin.debug:
        var: ans_paths
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      when: ans_paths is defined

  tags:
    - ansible
...
